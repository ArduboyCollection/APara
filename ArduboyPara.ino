#include "Arduboy.h"

PROGMEM const byte background[128*8] = {
0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,251,251,251,251,59,15,3,15,27,59,107,107,107,111,111,63,15,63,111,239,239,239,239,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,95,79,103,39,55,47,79,15,143,31,15,31,15,15,7,7,7,15,31,31,31,31,47,191,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,248,240,224,224,128,134,230,224,230,230,224,224,131,131,226,224,225,243,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,255,249,253,48,152,200,228,244,248,254,255,248,254,255,255,252,254,255,254,255,254,252,249,250,254,253,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,127,127,127,63,63,63,63,63,63,31,31,31,63,47,15,7,31,15,15,31,159,207,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,15,3,240,252,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,252,254,249,248,252,254,252,252,254,242,208,224,128,0,214,252,248,226,198,14,62,253,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,160,80,169,83,171,83,171,87,167,87,143,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,127,191,95,175,79,175,87,167,87,160,64,163,3,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,2,1,0,1,192,240,252,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,248,249,248,253,252,249,242,245,194,5,2,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,116,84,84,84,84,92,95,215,87,87,87,127,127,251,219,223,215,247,247,255,255,247,119,119,119,247,247,247,255,255,255,255,255,247,247,247,247,247,255,255,255,247,247,247,119,127,127,123,123,123,123,251,255,255,255,247,119,127,127,127,127,119,119,247,247,255,255,255,255,255,255,251,251,251,251,187,187,187,191,191,255,247,247,247,247,247,255,255,127,119,119,127,223,223,95,95,87,119,84,92,92,220,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,247,181,181,181,181,181,191,191,251,251,251,187,187,191,255,255,255,255,247,247,247,247,247,247,247,255,255,255,255,254,222,222,222,222,222,222,222,223,255,255,255,255,247,247,247,247,247,255,255,255,255,255,255,255,247,247,247,247,247,247,247,255,255,255,255,255,254,254,254,254,238,239,239,239,239,239,239,255,255,253,253,253,253,255,255,239,239,239,239,239,237,237,237,253,189,181,183,183,183,183,247,247,0,0,0,0,0,0,0,0,0,0,0,0,0,
  };

PROGMEM const struct BOAT {
  byte toprow[19];
  byte bottomrow[19];
} boats[3] = {
   {{0},
   {0}},
   {{0},
   {0}},
   {{0},
   {0}},
};

// Make an instance of arduboy used for many functions
Arduboy arduboy;

byte frame = 0;
byte boat_pos = 0;
unsigned short score = 1234;

void setup() {
  // put your setup code here, to run once:
  arduboy.begin();
  arduboy.setFrameRate(8);
}

void drawScore(){
  unsigned int sc = score;
  arduboy.drawChar(37, 2, sc%10+'0', 0, 1, 1);
  sc /= 10;
  arduboy.drawChar(30, 2, sc%10+'0', 0, 1, 1);
  sc /= 10;
  arduboy.drawChar(23, 2, sc%10+'0', 0, 1, 1);
  sc /= 10;
  arduboy.drawChar(16, 2, sc%10+'0', 0, 1, 1);
}

void draw() {
  byte* buffer = arduboy.getBuffer();
  memcpy_P(buffer, background, sizeof(background));

  switch(frame & 3) {
    case 0:
    case 3:
    /* delete top rotor */
    buffer[90] |= 4;
    buffer[91] |= 4;
    buffer[92] |= 4;
    buffer[93] |= 4;
    buffer[94] |= 4;
    buffer[98] |= 4;
    buffer[99] |= 4;
    buffer[100] |= 4;
    buffer[101] |= 4;
    buffer[102] |= 4;
    if (frame & 1) break;
    case 1:
    /* delete front rotor */
    buffer[100] |= 16;
    buffer[101] |= 16;
    buffer[102] |= 16;
    buffer[103] |= 16;
    buffer[104] |= 16;
    buffer[108] |= 16;
    buffer[109] |= 16;
    buffer[110] |= 16;
    buffer[111] |= 16;
    buffer[112] |= 16;
    case 2:
    break;
  }

  const struct BOAT &boat = boats[boat_pos];
  byte col = 23+21*boat_pos;
  for(byte c=0; c<19; c++){
      buffer[5*128+c+col] = 0;//boat.toprow[c];
      buffer[6*128+c+col] = 0;//boat.bottomrow[c];
  }

  drawScore();
}

byte left = 0;
byte right=0;


void loop() {
  // put your main code here, to run repeatedly:

  byte boat_moved = 0;
  
  if(arduboy.pressed(LEFT_BUTTON)) {
    if (left == 0){
      if (boat_pos>0) {
        boat_pos--;
        boat_moved = 1;
      }
      left = 1;
    }
  }
  else {
    left = 0;
  }
  
    
  if(arduboy.pressed(B_BUTTON) || arduboy.pressed(RIGHT_BUTTON)) {
     if (right == 0){
      if (boat_pos<2)  {
        boat_pos++;
        boat_moved = 1;
      }
      right = 1;
    }
  }
  else {
    right = 0;
  }

  if (!(arduboy.nextFrame())){
    if (boat_moved){
      draw();
      arduboy.display();
    }
    return;
  }
  frame += 1;

  draw();
  if (frame % 8 == 0)
    arduboy.tunes.tone(523, 25);

  
  arduboy.display();  
}
